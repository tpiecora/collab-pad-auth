<!DOCTYPE html>
<html ng-app="app">
  <head>
    <title>Collab-Pad</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/custom.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/quill.base.css">
    <link rel="stylesheet" href="/styles/quill.snow.css">
    <!--STYLES END-->
  </head>

  <body>

    <%- body %>

    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, filesin your `assets/linker/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit your Gruntfile.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/angular.js"></script>
    <script src="/js/dependencies/angular-local-storage.min.js"></script>
    <script src="/js/dependencies/angular-messages.js"></script>
    <script src="/js/dependencies/angular-ui-router.js"></script>
    <script src="/js/dependencies/ng-quill.js"></script>
    <script src="/js/dependencies/quill.js"></script>
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/ui-bootstrap-tpls-0.11.0.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/services/accessLevels.js"></script>
    <script src="/js/controllers/PadController.js"></script>
    <script src="/js/controllers/PadsController.js"></script>
    <script src="/js/controllers/loginController.js"></script>
    <script src="/js/controllers/messagesController.js"></script>
    <script src="/js/controllers/navController.js"></script>
    <script src="/js/controllers/registerController.js"></script>
    <script src="/js/routes.js"></script>
    <script src="/js/services/PadsRepository.js"></script>
    <script src="/js/services/auth.js"></script>
    <script src="/js/services/currentUser.js"></script>
    <script src="/js/services/localStorage.js"></script>
    <script src="/js/services/messagesRepository.js"></script>
    <!--SCRIPTS END-->

    <!--
          Client-side Templates
          ========================

          HTML templates are important prerequisites of modern, rich client applications.
          To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
          that you load these templates client-side.

          By default, your Gruntfile is configured to automatically load and precompile
          client-side JST templates in your `assets/linker/templates` folder, then
          include them here automatically (between TEMPLATES and TEMPLATES END).

          To customize this behavior to fit your needs, just edit your Gruntfile.
          For example, here are a few things you could do:

              + Import templates from other directories
              + Use a different template engine (handlebars, jade, dust, etc.)
              + Internationalize your client-side templates using a server-side
                stringfile before they're served.
      -->

    <!--TEMPLATES-->
    <script type="text/javascript" src="/templates.js"></script>
    <!--TEMPLATES END-->
  </body>
</html>
